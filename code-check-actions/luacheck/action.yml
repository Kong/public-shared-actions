name: Luacheck
description: Static analysis of Lua
author: 'Kong'
inputs:
  additional_args:
    description: 'Arguments for Luacheck'
    required: false
    default: '' # Scans workspace dir
  files:
    description: 'List of files, directories and rockspecs to check'
    required: false
    default: '.' # Scans workspace dir
    
runs:
  using: composite
  steps:

    - name: Run Luacheck for static analysis
      uses: lunarmodules/luacheck@fcbdeacad00e643e0d78c56b9ba6d8b3c7fa584f
      continue-on-error: true
      with:
        args: "${{ inputs.additional_args }} -c --codes --ranges --formatter JUnit -q ${{ inputs.files }} > luacheck_${{github.sha}}.xml"
    
    - name: Upload results to workflow
      if: always()
      uses: actions/upload-artifact@v3
      with:
        path: |
          luacheck_${{github.sha}}.xml
        if-no-files-found: warn

#     - name: Print Luacheck results
#       shell: bash
#       run: | 
#         cat luacheck_${{github.sha}}.xml

    # when using the regular GITHUB_TOKEN, the check-run created by this step will be assigned to a
    # random workflow in the GH UI. to prevent this, we can force the check-run to be created in a separate
    # check-suite, which is created automatically if we use the credentials of a GitHub App
    # Ref: https://github.com/EnricoMi/publish-unit-test-result-action/issues/181
    # Publishing: https://github.com/EnricoMi/publish-unit-test-result-action#publishing-test-results
    - name: Luacheck Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          luacheck_${{github.sha}}.xml
        check_name: Luacheck Report
        comment_mode: always
        action_fail: false

  
