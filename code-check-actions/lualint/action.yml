name: 'Lualint for GitHub CI'

description: 'Lint all changed lua files using kong/lualint'

inputs:
  kong_gh_app_id:
    description: 'The app ID of the GitHub app used to generate a token'
    required: true

  kong_gh_app_private_key:
    description: 'The private key of the GitHub app used to generate a token'
    required: true

  rules:
    description: 'A JSON string of the rules to use for linting'
    required: false
    default: '{"max_column_width": {}, "one_line_before_else": {}, "eof_blank_line": {}, "table_ctor_comma": {}, "func_separation": {}}'

  extra_args:
    description: 'Extra arguments to pass to lualint'
    required: false
    default: ''

  debug:
    description: 'Set to true to enable debugging output'
    required: false
    default: false

  only_changed_lines:
    description: 'Set to true to enable report on changed lines only'
    required: false
    default: true

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v3.4.0
      with:
        fetch-depth: 2

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@04124efe7560d15e11ea2ba96c0df2989f68f1f4
      with:
        base_sha: ${{ github.event.workflow_run.head_sha }}

    - name: Debug inputs
      shell: bash
      if: ${{ inputs.debug }}
      run: |
        echo "[Debug] kong_gh_app_id: ${{ inputs.kong_gh_app_id }}"
        echo "[Debug] kong_gh_app_private_key: ${{ inputs.kong_gh_app_private_key }}"
        echo "[Debug] rules: ${{ inputs.rules }}"
        echo "[Debug] extra_args: ${{ inputs.extra_args }}"
        echo "[Debug] all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}"

    - name: Generate token
      id: github-app-token
      uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c # v1.7.0
      with:
        app_id: ${{ inputs.kong_gh_app_id }}
        private_key: ${{ inputs.kong_gh_app_private_key }}

    - name: Generate release name
      id: generate-release-name
      shell: bash
      run:
        echo "RELEASE_NAME=lualint_$(uname -m)-unknown-linux-gnu.zip" >> $GITHUB_OUTPUT

    - name: Download Lualint
      uses: robinraju/release-downloader@768b85c8d69164800db5fc00337ab917daf3ce68
      with:
        repository: "kong/lualint"
        token: ${{ steps.github-app-token.outputs.token }}
        latest: true
        fileName: ${{ steps.generate-release-name.outputs.RELEASE_NAME }}

    - name: Setup Node
      uses: actions/setup-node@v3
      if: ${{ inputs.only_changed_lines }}
      with:
        node-version: 16

    - name: Lint all changed lua files
      shell: bash
      run: |
        unzip ${{ steps.generate-release-name.outputs.RELEASE_NAME }};
        chmod +x ./lualint;
        ALL_PASSED="true";

        if [[ "${{ inputs.only_changed_lines }}" == "true" ]]; then
          echo "Only lint changed files"

          OLD_DIR=$PWD

          DIR_DIFF_LINES_TOOL=${{ runner.temp }}/tmp__diff-lines
          git clone https://github.com/pluveto/diff-line $DIR_DIFF_LINES_TOOL

          FILE_FOCUS_RANGE=${{ runner.temp }}/tmp__focus_ranges.csv
          pushd $DIR_DIFF_LINES_TOOL
            sudo npm install -g typescript commander ts-node child_process @types/node
            npm i
            npm ls

            echo "head=${{ github.event.pull_request.head.sha }}"
            echo "base=${{ github.event.pull_request.base.sha }}"

            ts-node src/index.ts ./diff-lines \
                -s ${{ github.event.pull_request.head.sha }} \
                -t ${{ github.event.pull_request.base.sha }} \
                -m add -f csv -w $OLD_DIR > $FILE_FOCUS_RANGE;
            cat $FILE_FOCUS_RANGE;
          popd
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.lua ]]; then
              ./lualint run --rules '${{ inputs.rules }}' --focus $FILE_FOCUS_RANGE ${{ inputs.extra_args }} "$file";
              if [[ $? -ne 0 ]]; then
                ALL_PASSED="false";
              fi;
            fi;
          done;
        else
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.lua ]]; then
              ./lualint run --rules '${{ inputs.rules }}' ${{ inputs.extra_args }} "$file";
              if [[ $? -ne 0 ]]; then
                ALL_PASSED="false";
              fi;
            fi;
          done;
        fi;

        if [[ $ALL_PASSED == "false" ]]; then
          exit 1;
        else
          echo "All good!";
        fi;
