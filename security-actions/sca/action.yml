name: SCA
description: Generates SBOM and vulnerabiity report
author: 'Kong'
inputs:
  asset_prefix:
    description: 'prefix for generated scan artifacts'
    required: false
    default: ''
  dir:
    description: 'Specify a directory to be scanned. This is mutually exclusive to file and image'
    required: false
    default: ''
  file:
    description: 'Specify a file to be scanned. This is mutually exclusive to dir and image'
    required: false
    default: ''
  config:
    description: 'file path to syft custom configuration'
    required: false
  fail_build:
    description: 'fail the build if the vulnerability is above the severity cutoff'
    required: false
    default: false
    type: choice
    options:
    - 'true'
    - 'false'
  github-token:
    description: "Authorized secret GitHub Personal Access Token. Defaults to github.token"
    required: false
    default: ${{ github.token }}
  upload-sbom-release-assets:
    description: 'specify to only upload sboms to GH release assets'
    required: false
    default: false
    type: choice
    options:
    - 'true'
    - 'false'

# Outputs to be consumed by others using this SCA action
outputs:
  global-enforce-build-failure:
    description: 'Globally fail the build on failure. Overrides fail_build when set'
    value: ${{ steps.meta.outputs.global_enforce_build_failure }}
  cis-json-report:
    description: 'docker-cis json report'
    value: ${{ steps.meta.outputs.cis_json_file }}
  grype-json-report:
    description: 'vulnerability json report'
    value: ${{ steps.meta.outputs.grype_json_file }}
  grype-sarif-report:
    description: 'vulnerability sarif report'
    value: ${{ steps.meta.outputs.grype_sarif_file }}
  sbom-spdx-report:
    description: 'SBOM spdx report'
    value: ${{ steps.meta.outputs.sbom_spdx_file }}
  sbom-cyclonedx-report:
    description: 'SBOM cyclonedx report'
    value: ${{ steps.meta.outputs.sbom_cyclonedx_file }}

runs:
  using: composite
  steps:

    - name: Set Scan Job Metadata
      shell: bash
      id: meta
      env:
        DIR: ${{ inputs.dir }}
        FILE: ${{ inputs.file }}
        ASSET_PREFIX: ${{ inputs.asset_prefix }}
      run: $GITHUB_ACTION_PATH/scripts/scan-metadata.sh

    # Must upload artifact for output file parameter to have effect
    - name: Generate SPDX SBOM Using Syft
      uses: anchore/sbom-action@v0.16.0
      id: sbom_spdx
      with:
        config: ${{ inputs.config }}
        path: ${{ steps.meta.outputs.scan_dir }}
        file: ${{ steps.meta.outputs.scan_file }}
        format: spdx-json
        artifact-name: ${{ steps.meta.outputs.sbom_spdx_file }}
        output-file: ${{ steps.meta.outputs.sbom_spdx_file }}
        upload-artifact: true
        upload-release-assets: ${{ inputs.upload-sbom-release-assets }}
        dependency-snapshot: false
        github-token: ${{ inputs.github-token }}

    - name: Generate CycloneDX SBOM Using Syft
      uses: anchore/sbom-action@v0.16.0
      id: sbom_cyclonedx
      with:
        config: ${{ inputs.config }}
        path: ${{ steps.meta.outputs.scan_dir }}
        file: ${{ steps.meta.outputs.scan_file }}
        format: cyclonedx-json
        artifact-name: ${{ steps.meta.outputs.sbom_cyclonedx_file }}
        output-file: ${{ steps.meta.outputs.sbom_cyclonedx_file }}
        upload-artifact: true
        upload-release-assets: ${{ inputs.upload-sbom-release-assets }}
        dependency-snapshot: false
        github-token: ${{ inputs.github-token }}

    - name: Check SBOM files existence
      uses: andstor/file-existence-action@v3
      id: sbom_report
      with:
        files: "${{ steps.meta.outputs.sbom_spdx_file }}, ${{ steps.meta.outputs.sbom_cyclonedx_file }}"
        fail: true

    # Don't fail during report generation
    - name: Vulnerability analysis of SBOM
      uses: anchore/scan-action@v4.1.0
      id: grype_analysis_sarif
      if: ${{ steps.sbom_report.outputs.files_exists == 'true' }}
      with:
        sbom: ${{ steps.meta.outputs.sbom_spdx_file }}
        output-format: sarif
        fail-build: 'false'
        add-cpes-if-none: true
        severity-cutoff: ${{ steps.meta.outputs.global_severity_cutoff }}

    # Don't fail during report generation
    # JSON format will report  any ignored rules
    - name: Vulnerability analysis of SBOM
      uses: anchore/scan-action@v4.1.0
      id: grype_analysis_json
      if: ${{ steps.sbom_report.outputs.files_exists == 'true' }}
      with:
        sbom: ${{ steps.meta.outputs.sbom_spdx_file }}
        output-format: json
        fail-build: 'false'
        add-cpes-if-none: true
        severity-cutoff: ${{ steps.meta.outputs.global_severity_cutoff }}
      env:
        GRYPE_DB_AUTO_UPDATE: false # Use grype db cache from grype step above

    - name: Check vulnerability analysis report existence
      uses: andstor/file-existence-action@v3
      id: grype_report
      with:
        files: "${{ steps.grype_analysis_sarif.outputs.sarif }}, ${{ steps.grype_analysis_json.outputs.json }}"
        fail: true

    # Grype CVE Action generates an ./results.sarif or ./results.report and no way to customize output file name
    # Hack to increase readability of grype artifacts attached to workflows and releases
    - name: Rename grype analysis report
      shell: bash
      run: |
        mv ${{ steps.grype_analysis_sarif.outputs.sarif }} ${{ steps.meta.outputs.grype_sarif_file }}
        mv ${{ steps.grype_analysis_json.outputs.json }} ${{ steps.meta.outputs.grype_json_file }}

    - name: Upload grype analysis report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.meta.outputs.grype_sarif_file }}
        path: |
          ${{ steps.meta.outputs.grype_sarif_file }}
        if-no-files-found: warn

    # Upload grype cve reports
    - name: Upload grype analysis report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.meta.outputs.grype_json_file }}
        path: |
          ${{ steps.meta.outputs.grype_json_file }}
        if-no-files-found: warn

    # Fail based on severity and input parameters
    # Notify grype quick scan results in table format
    # Table format will supress any specified ignore rules
    - name: Inspect Vulnerability analysis of SBOM
      uses: anchore/scan-action@v4.1.0
      if: ${{ steps.sbom_report.outputs.files_exists == 'true' }}
      with:
        sbom: ${{ steps.meta.outputs.sbom_spdx_file }}
        output-format: table
        fail-build: ${{ steps.meta.outputs.global_enforce_build_failure == 'true' && steps.meta.outputs.global_enforce_build_failure || inputs.fail_build }}
        add-cpes-if-none: true
        severity-cutoff: ${{ steps.meta.outputs.global_severity_cutoff }}
      env:
        GRYPE_DB_AUTO_UPDATE: false # Use grype db cache from grype step above
