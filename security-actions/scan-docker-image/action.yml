name: Docker SCA and CIS scan
description: Generates SBOM and vulnerabiity report
author: 'Kong'
inputs:
  asset_prefix:
    description: 'prefix for generated scan artifacts'
    required: false
    default: ''
  image:
    description: 'specify an image to be scanned. Specify registry credentials if the image is remote. Takes priority over dir and file'
    required: false
    default: ''
  tag:
    description: 'specify a docker image tag / release tag / ref to be scanned'
    required: false
    default: ''
  registry_username:
    description: 'docker username to login against private docker registry'
    required: false
  registry_password:
    description: 'docker password to login against private docker registry'
    required: false
  fail_build:
    description: 'fail the build if the vulnerability is above the severity cutoff'
    required: false
    default: false
    type: choice
    options:
    - 'true'
    - 'false'

outputs:
  cis-json-report:
    description: 'docker-cis json report'
    value: ${{ steps.sca.outputs.cis-json-report }}
  grype-json-report:
    description: 'vulnerability json report'
    value: ${{ steps.sca.outputs.grype_json_report }}
  grype-sarif-report:
    description: 'vulnerability sarif report'
    value: ${{ steps.sca.outputs.grype_sarif_report }}
  sbom-spdx-report:
    description: 'SBOM spdx report'
    value: ${{ steps.sca.outputs.sbom_spdx_file }}
  sbom-cyclonedx-report:
    description: 'SBOM cyclonedx report'
    value: ${{ steps.sca.outputs.sbom_cyclonedx_file }}

runs:
  using: composite
  steps:

    # Due to https://github.com/orgs/community/discussions/41927
    - name: Symlink current Actions repo
      working-directory: ${{ github.action_path }}
      shell: bash
      run: ln -fs $(realpath ../../)  /home/runner/work/_actions/current

    - run: |
        ls -al /home/runner/work/_actions/current
      shell: bash

    # Reuse SCA action for docker-image
    - name: Perform Docker SCA
      id: sca
      uses: ./../../_actions/current/security-actions/sca
      with:
        asset_prefix: ${{ inputs.asset_prefix }}
        image: ${{ inputs.image }}
        tag: ${{ inputs.tag }}
        registry_username: ${{ inputs.registry_username }}
        registry_password: ${{ inputs.registry_password }}
        fail_build: ${{ inputs.fail_build }}

    - name: Check docker OCI tar existence
      if: ${{ steps.sca.outputs.analyzed-image != '' }}
      uses: andstor/file-existence-action@v3
      id: docker_tar
      with:
        files: "${{ steps.sca.outputs.analyzed-image }}"

    - name: Generate docker-cis JSON report
      uses: docker://ghcr.io/aquasecurity/trivy:0.37.2
      if: ${{ steps.sca.outputs.analyzed-image != '' }}
      id: cis_json
      with:
        entrypoint: trivy
        args: "image ${{ env.input }} ${{ steps.sca.outputs.analyzed-image }} --compliance ${{ env.compliance }} -f json --severity ${{ env.severity }} --ignore-unfixed -o ${{ steps.sca.outputs.cis-json-report }}"
      env:
        compliance: docker-cis
        severity: ${{ steps.sca.outputs.global_severity_cutoff }}
        input: ${{ steps.docker_tar.outputs.files_exists == 'true' && '--input' || '' }}

    - name: upload docker-cis JSON report
      if: ${{ steps.sca.outputs.analyzed-image != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.sca.outputs.cis-json-report }}
        path: |
          ${{ steps.sca.outputs.cis-json-report }}
        if-no-files-found: warn

    - name: Inspect docker-cis report
      if: ${{ steps.sca.outputs.analyzed-image != '' }}
      uses: docker://ghcr.io/aquasecurity/trivy:0.37.2
      with:
        entrypoint: trivy
        args: "image ${{ env.input }} ${{ steps.sca.outputs.analyzed-image }} --compliance ${{ env.compliance }} -f table --severity ${{ env.severity }} --ignore-unfixed --exit-code ${{ env.exit-code }}"
      env:
        exit-code: ${{ (steps.sca.outputs.global_enforce_build_failure == 'true' || inputs.fail_build == 'true') && '1' || '0' }}
        compliance: docker-cis
        severity: ${{ steps.sca.outputs.global_severity_cutoff }}
        input: ${{ steps.docker_tar.outputs.files_exists == 'true' && '--input' || '' }}

    