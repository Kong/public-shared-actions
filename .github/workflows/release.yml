name: Publish Release

on:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.SECURITY_BOT_PSA_PAT }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      
      # This is needed since we only cache ~/.pnpm_store instead of entire node_modules    
      - name: Install dependencies
        run: pnpm install

      - name: Setup Git Config
        shell: bash
        run: |
          git checkout ${{ github.head_ref }}
          git config --local user.name "kong-security-bot"
          git config --local user.email "117922193+kong-security-bot@users.noreply.github.com"

      # This step will create a tag and also release
      - name: Provision tags and make a release
        if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main') }}
        env:
          GH_TOKEN: ${{ secrets.SECURITY_BOT_PSA_PAT }}
        shell: bash
        run: |
          pnpm version:ci
      
      - name: Dry-run for tagging and releases
        if: ${{ github.ref != 'refs/heads/main' }}
        shell: bash
        run: pnpm version:dry-run

  slack_notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: release
    if: ${{ (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_run' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Success Notification
      - name: Send Success Notification
        if: ${{ needs.release.result == 'success' }}
        uses: ./slack-actions/workflow-notification
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL_NOTIFY_PUBLIC_SHARED_ACTIONS }}
          status: success
          payload: |
            {
              "text": "Completely custom Slack message for release",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "emoji": true,
                    "text": "Release Workflow Success"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n<${{ github.server_url }}/${{ github.repository }}/tree/${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}|${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_number }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*TriggeredByCommit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Release Commit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.release.outputs.release_commit }}|${{ needs.release.outputs.release_commit }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered By:*\n${{ github.actor }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit Author:*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Event Name:*\n${{ github.event_name }}"
                    }
                  ]
                }
              ]
            }
    
      # Failure Notification
      - name: Send Failure Notification
        if: ${{ needs.release.result == 'failure' }}
        uses: ./slack-actions/workflow-notification
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL_ALERT_PUBLIC_SHARED_ACTIONS }}
          status: failure
          payload: |
            {
              "text": "Completely custom Slack message for release",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "emoji": true,
                    "text": "Release Workflow Failure"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n<${{ github.server_url }}/${{ github.repository }}/tree/${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}|${{ github.head_ref || steps.slack-variables.outputs.fallback-branch-name }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_number }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*TriggeredByCommit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Release Commit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.release.outputs.release_commit }}|${{ needs.release.outputs.release_commit }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered By:*\n${{ github.actor }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit Author:*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Event Name:*\n${{ github.event_name }}"
                    }
                  ]
                }
              ]
            }