name: Rust SCA Test

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    tags:
    - '*'
  workflow_dispatch: {}

jobs:
  test-rust-sca:
    permissions:
      # required for all workflows
      security-events: write
      checks: write
      pull-requests: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    env:
      TEST_REPOSITORY: "${{github.repository_owner}}/atc-router"
    runs-on: ubuntu-latest
    name: Rust code analysis and SCA checks
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: ${{env.TEST_REPOSITORY}}
          path: ${{env.TEST_REPOSITORY}}
      - uses: ./security-actions/scan-rust
        with:
          asset_prefix: ${{env.TEST_REPOSITORY}}
          dir: ${{ github.workspace }}/${{env.TEST_REPOSITORY}}
          codeql_upload: false

  notify-slack:
    name: Slack Notification
    permissions: 
      contents: read
    needs: [test-rust-sca]
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/workflow-notifications.yml
    with:
      workflow_name: "Rust SCA Test Workflow"
      job_status: ${{ contains(needs.*.result, 'failure') && 'failure' || contains(needs.*.result, 'success') && 'success' || 'failure' }}
    secrets:
      SLACK_WEBHOOK_URL_NOTIFY: ${{ secrets.SLACK_WEBHOOK_URL_NOTIFY_PUBLIC_SHARED_ACTIONS }}
      SLACK_WEBHOOK_URL_ALERT: ${{ secrets.SLACK_WEBHOOK_URL_ALERT_PUBLIC_SHARED_ACTIONS }}