name: Docker Image Provenance

on:
  push:
    branches:
    - main
    tags:
    - '*'
  workflow_dispatch: {}

env:
  IMAGE: "docker.io/library/ubuntu"
  TAG: "24.10"

jobs:

  provenance-metadata:
    name: Set Docker Image Provenance metadata
    runs-on: ubuntu-22.04
    if: ${{ github.repository_owner == 'Kong' }}
    outputs:
      IMAGE_MANIFEST_DIGEST: ${{ steps.image_manifest_metadata.outputs.manifest_sha }}
      IMAGE: ${{env.IMAGE}}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Install regctl
      uses: regclient/actions/regctl-installer@ce5fd131e371ffcdd7508b478cb223b3511a9183

    - name: Login to Docker Hub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PROVENANCE_CI_TEST_TOKEN }}

    - name: Parse Image Manifest Digest
      id: image_manifest_metadata
      run: |
        manifest_sha="$(regctl image digest "${IMAGE}:${TAG}")"

        echo "manifest_sha=$manifest_sha"
        echo "manifest_sha=$manifest_sha" >> $GITHUB_OUTPUT

  generate-docker-image-provenance:
    name: Test Docker Image Provenance
    needs: [provenance-metadata]
    permissions:
      contents: read
      actions: read
      packages: write # needed to upload to packages to registry
      id-token: write # needed for signing the images with GitHub OIDC Token
    if: ${{ github.repository_owner == 'Kong' }}
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: "${{ needs.provenance-metadata.outputs.IMAGE }}"
      digest: "${{ needs.provenance-metadata.outputs.IMAGE_MANIFEST_DIGEST }}"
      provenance-repository: kong/notary-internal
    secrets:
      registry-password: ${{ secrets.DOCKERHUB_USERNAME }}
      registry-username: ${{ secrets.DOCKER_PROVENANCE_CI_TEST_TOKEN }}
      provenance-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
      provenance-registry-password: ${{ secrets.DOCKER_PROVENANCE_CI_TEST_TOKEN }}
  notify-slack:
    name: Slack Notification
    permissions: 
      contents: read
    needs: [provenance-metadata, generate-docker-image-provenance]
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/workflow-notifications.yml
    with:
      workflow_name: "Docker Image Provenance Workflow"
      job_status: ${{ contains(needs.*.result, 'failure') && 'failure' || contains(needs.*.result, 'success') && 'success' || 'failure' }}
    secrets:
      SLACK_WEBHOOK_URL_NOTIFY: ${{ secrets.SLACK_WEBHOOK_URL_NOTIFY_PUBLIC_SHARED_ACTIONS }}
      SLACK_WEBHOOK_URL_ALERT: ${{ secrets.SLACK_WEBHOOK_URL_ALERT_PUBLIC_SHARED_ACTIONS }}